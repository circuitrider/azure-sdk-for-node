/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @summary The set of changes to be made to a Task.
  *
 */
class TaskUpdateParameter {
  /**
   * Create a TaskUpdateParameter.
   * @property {object} [constraints] Constraints that apply to this Task. If
   * omitted, the Task is given the default constraints. For multi-instance
   * Tasks, updating the retention time applies only to the primary Task and
   * not subtasks.
   * @property {moment.duration} [constraints.maxWallClockTime] If this is not
   * specified, there is no time limit on how long the Task may run.
   * @property {moment.duration} [constraints.retentionTime] The default is 7
   * days, i.e. the Task directory will be retained for 7 days unless the
   * Compute Node is removed or the Job is deleted.
   * @property {number} [constraints.maxTaskRetryCount] Note that this value
   * specifically controls the number of retries for the Task executable due to
   * a nonzero exit code. The Batch service will try the Task once, and may
   * then retry up to this limit. For example, if the maximum retry count is 3,
   * Batch tries the Task up to 4 times (one initial try and 3 retries). If the
   * maximum retry count is 0, the Batch service does not retry the Task after
   * the first attempt. If the maximum retry count is -1, the Batch service
   * retries the Task without limit.
   */
  constructor() {
  }

  /**
   * Defines the metadata of TaskUpdateParameter
   *
   * @returns {object} metadata of TaskUpdateParameter
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TaskUpdateParameter',
      type: {
        name: 'Composite',
        className: 'TaskUpdateParameter',
        modelProperties: {
          constraints: {
            required: false,
            serializedName: 'constraints',
            type: {
              name: 'Composite',
              className: 'TaskConstraints'
            }
          }
        }
      }
    };
  }
}

module.exports = TaskUpdateParameter;
