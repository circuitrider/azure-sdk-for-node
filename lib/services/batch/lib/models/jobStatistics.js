/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @summary Resource usage statistics for a Job.
  *
 */
class JobStatistics {
  /**
   * Create a JobStatistics.
   * @property {string} url The URL of the statistics.
   * @property {date} startTime The start time of the time range covered by the
   * statistics.
   * @property {date} lastUpdateTime The time at which the statistics were last
   * updated. All statistics are limited to the range between startTime and
   * lastUpdateTime.
   * @property {moment.duration} userCPUTime The total user mode CPU time
   * (summed across all cores and all Compute Nodes) consumed by all Tasks in
   * the Job.
   * @property {moment.duration} kernelCPUTime The total kernel mode CPU time
   * (summed across all cores and all Compute Nodes) consumed by all Tasks in
   * the Job.
   * @property {moment.duration} wallClockTime The total wall clock time of all
   * Tasks in the Job.  The wall clock time is the elapsed time from when the
   * Task started running on a Compute Node to when it finished (or to the last
   * time the statistics were updated, if the Task had not finished by then).
   * If a Task was retried, this includes the wall clock time of all the Task
   * retries.
   * @property {number} readIOps The total number of disk read operations made
   * by all Tasks in the Job.
   * @property {number} writeIOps The total number of disk write operations
   * made by all Tasks in the Job.
   * @property {number} readIOGiB The total amount of data in GiB read from
   * disk by all Tasks in the Job.
   * @property {number} writeIOGiB The total amount of data in GiB written to
   * disk by all Tasks in the Job.
   * @property {number} numSucceededTasks The total number of Tasks
   * successfully completed in the Job during the given time range. A Task
   * completes successfully if it returns exit code 0.
   * @property {number} numFailedTasks The total number of Tasks in the Job
   * that failed during the given time range. A Task fails if it exhausts its
   * maximum retry count without returning exit code 0.
   * @property {number} numTaskRetries The total number of retries on all the
   * Tasks in the Job during the given time range.
   * @property {moment.duration} waitTime The total wait time of all Tasks in
   * the Job. The wait time for a Task is defined as the elapsed time between
   * the creation of the Task and the start of Task execution. (If the Task is
   * retried due to failures, the wait time is the time to the most recent Task
   * execution.) This value is only reported in the Account lifetime
   * statistics; it is not included in the Job statistics.
   */
  constructor() {
  }

  /**
   * Defines the metadata of JobStatistics
   *
   * @returns {object} metadata of JobStatistics
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'JobStatistics',
      type: {
        name: 'Composite',
        className: 'JobStatistics',
        modelProperties: {
          url: {
            required: true,
            serializedName: 'url',
            type: {
              name: 'String'
            }
          },
          startTime: {
            required: true,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          lastUpdateTime: {
            required: true,
            serializedName: 'lastUpdateTime',
            type: {
              name: 'DateTime'
            }
          },
          userCPUTime: {
            required: true,
            serializedName: 'userCPUTime',
            type: {
              name: 'TimeSpan'
            }
          },
          kernelCPUTime: {
            required: true,
            serializedName: 'kernelCPUTime',
            type: {
              name: 'TimeSpan'
            }
          },
          wallClockTime: {
            required: true,
            serializedName: 'wallClockTime',
            type: {
              name: 'TimeSpan'
            }
          },
          readIOps: {
            required: true,
            serializedName: 'readIOps',
            type: {
              name: 'Number'
            }
          },
          writeIOps: {
            required: true,
            serializedName: 'writeIOps',
            type: {
              name: 'Number'
            }
          },
          readIOGiB: {
            required: true,
            serializedName: 'readIOGiB',
            type: {
              name: 'Number'
            }
          },
          writeIOGiB: {
            required: true,
            serializedName: 'writeIOGiB',
            type: {
              name: 'Number'
            }
          },
          numSucceededTasks: {
            required: true,
            serializedName: 'numSucceededTasks',
            type: {
              name: 'Number'
            }
          },
          numFailedTasks: {
            required: true,
            serializedName: 'numFailedTasks',
            type: {
              name: 'Number'
            }
          },
          numTaskRetries: {
            required: true,
            serializedName: 'numTaskRetries',
            type: {
              name: 'Number'
            }
          },
          waitTime: {
            required: true,
            serializedName: 'waitTime',
            type: {
              name: 'TimeSpan'
            }
          }
        }
      }
    };
  }
}

module.exports = JobStatistics;
